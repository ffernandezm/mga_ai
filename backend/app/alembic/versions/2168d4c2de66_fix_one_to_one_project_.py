"""Fix one-to-one Project â†” ParticipantsGeneral

Revision ID: 2168d4c2de66
Revises: 
Create Date: 2025-07-21 11:37:31.579692

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2168d4c2de66'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_problems_id', table_name='problems')
    # op.drop_table('problems')
    # op.drop_index('ix_population_id', table_name='population')
    # op.drop_table('population')
    # op.drop_index('ix_indirect_causes_id', table_name='indirect_causes')
    # op.drop_table('indirect_causes')
    # op.drop_index('ix_projects_id', table_name='projects')
    # op.drop_index('ix_projects_name', table_name='projects')
    # op.drop_table('projects')
    # op.drop_index('ix_objectives_id', table_name='objectives')
    # op.drop_table('objectives')
    # op.drop_index('ix_indirect_effects_id', table_name='indirect_effects')
    # op.drop_table('indirect_effects')
    # op.drop_index('ix_direct_effects_id', table_name='direct_effects')
    # op.drop_table('direct_effects')
    # op.drop_index('ix_participants_general_id', table_name='participants_general')
    # op.drop_table('participants_general')
    # op.drop_index('ix_alternatives_id', table_name='alternatives')
    # op.drop_table('alternatives')
    # op.drop_table('participants')
    # op.drop_index('ix_direct_causes_id', table_name='direct_causes')
    # op.drop_table('direct_causes')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('direct_causes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('direct_causes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('problem_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], name='direct_causes_problem_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='direct_causes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_direct_causes_id', 'direct_causes', ['id'], unique=False)
    op.create_table('participants',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('participant_actor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('participant_entity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('interest_expectative', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rol', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('contribution_conflicts', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('participants_general_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['participants_general_id'], ['participants_general.id'], name='participants_participants_general_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='participants_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='participants_pkey')
    )
    op.create_table('alternatives',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('solution_alternatives', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='alternatives_pkey')
    )
    op.create_index('ix_alternatives_id', 'alternatives', ['id'], unique=False)
    op.create_table('participants_general',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('participants_general_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('participants_analisis', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='participants_general_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='participants_general_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_participants_general_id', 'participants_general', ['id'], unique=False)
    op.create_table('direct_effects',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('direct_effects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('problem_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], name='direct_effects_problem_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='direct_effects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_direct_effects_id', 'direct_effects', ['id'], unique=False)
    op.create_table('indirect_effects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('direct_effect_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['direct_effect_id'], ['direct_effects.id'], name='indirect_effects_direct_effect_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='indirect_effects_pkey')
    )
    op.create_index('ix_indirect_effects_id', 'indirect_effects', ['id'], unique=False)
    op.create_table('objectives',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('general_objective', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cause_relations', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='objectives_pkey')
    )
    op.create_index('ix_objectives_id', 'objectives', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('problem_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('participants_general_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['participants_general_id'], ['participants_general.id'], name='projects_participants_general_id_fkey'),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], name='projects_problem_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey')
    )
    op.create_index('ix_projects_name', 'projects', ['name'], unique=False)
    op.create_index('ix_projects_id', 'projects', ['id'], unique=False)
    op.create_table('indirect_causes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('direct_cause_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['direct_cause_id'], ['direct_causes.id'], name='indirect_causes_direct_cause_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='indirect_causes_pkey')
    )
    op.create_index('ix_indirect_causes_id', 'indirect_causes', ['id'], unique=False)
    op.create_table('population',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('affected_population', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('target_population', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('demographic_characteristics', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='population_pkey')
    )
    op.create_index('ix_population_id', 'population', ['id'], unique=False)
    op.create_table('problems',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('central_problem', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('problem_tree_json', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('current_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('magnitude_problem', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='problems_pkey')
    )
    op.create_index('ix_problems_id', 'problems', ['id'], unique=False)
    # ### end Alembic commands ###
